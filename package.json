{
  "name": "vscode-front-matter-beta",
  "displayName": "Front Matter",
  "description": "Front Matter is a CMS that runs within Visual Studio Code. It gives you the power and control of a full-blown CMS while also providing you the flexibility and speed of the static site generator of your choice like: Hugo, Jekyll, Hexo, NextJs, Gatsby, and many more...",
  "icon": "assets/frontmatter-teal-128x128.png",
  "version": "8.1.2",
  "preview": false,
  "publisher": "eliostruyf",
  "galleryBanner": {
    "color": "#0e131f",
    "theme": "dark"
  },
  "badges": [
    {
      "description": "version",
      "url": "https://img.shields.io/github/package-json/v/estruyf/vscode-front-matter?color=green&label=vscode-front-matter&style=flat-square",
      "href": "https://github.com/estruyf/vscode-front-matter"
    },
    {
      "description": "Buy me a coffee",
      "url": "https://img.shields.io/badge/Buy%20me%20a%20coffee-â‚¬%203-blue?logo=buy-me-a-coffee&style=flat-square",
      "href": "https://www.buymeacoffee.com/zMeFRy9"
    }
  ],
  "sponsor": {
    "url": "https://github.com/sponsors/estruyf"
  },
  "qna": "https://github.com/estruyf/vscode-front-matter/discussions",
  "engines": {
    "vscode": "^1.63.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Front Matter",
    "CMS",
    "Markdown",
    "Taxonomy"
  ],
  "license": "MIT",
  "author": "Elio Struyf <elio@struyfconsulting.be> (https://www.eliostruyf.com)",
  "homepage": "https://frontmatter.codes",
  "bugs": {
    "url": "https://github.com/estruyf/vscode-front-matter/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/estruyf/vscode-front-matter"
  },
  "activationEvents": [
    "workspaceContains:**/.frontmatter",
    "workspaceContains:**/frontmatter.json",
    "onView:frontMatter.explorer",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "frontmatter-explorer",
          "title": "Front Matter",
          "icon": "assets/frontmatter-short-min.svg"
        }
      ]
    },
    "views": {
      "frontmatter-explorer": [
        {
          "id": "frontMatter.explorer",
          "name": "Front Matter",
          "icon": "assets/frontmatter-short-min.svg",
          "contextualTitle": "Front Matter",
          "type": "webview"
        }
      ]
    },
    "configuration": {
      "title": "Front Matter: use frontmatter.json for shared team settings",
      "properties": {
        "frontMatter.content.autoUpdateDate": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Specify if you want to automatically update the modified date of your article/page (only content located in your content folder). [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.autoupdatedate)",
          "scope": "Content"
        },
        "frontMatter.content.defaultFileType": {
          "type": "string",
          "default": "md",
          "oneOf": [
            {
              "enum": [
                "md",
                "mdx"
              ]
            },
            {
              "type": "string"
            }
          ],
          "markdownDescription": "Specify the default file type for the content to create. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.defaultfiletype)",
          "scope": "Content"
        },
        "frontMatter.content.defaultSorting": {
          "type": "string",
          "default": "",
          "oneOf": [
            {
              "enum": [
                "LastModifiedAsc",
                "LastModifiedDesc",
                "FileNameAsc",
                "FileNameDesc"
              ]
            },
            {
              "type": "string"
            }
          ],
          "markdownDescription": "Specify the default sorting option for the content dashboard. You can use one of the values from the enum or define your own ID. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.defaultSorting)",
          "scope": "Content"
        },
        "frontMatter.content.draftField": {
          "type": "object",
          "markdownDescription": "Define the draft field you want to use to manage your content. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.draftfield)",
          "default": {
            "name": "draft",
            "type": "boolean"
          },
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "boolean",
                "choice"
              ],
              "description": "Type of the draft field you want to use"
            },
            "name": {
              "type": "string",
              "description": "Name of the field to use"
            },
            "invert": {
              "type": "boolean",
              "description": "By default the draft field is set to true when the content is a draft. Set this to true to set it to false."
            },
            "choices": {
              "type": "array",
              "description": "List of choices for the field",
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "additionalProperties": false,
          "required": [
            "type",
            "name"
          ],
          "scope": "Content"
        },
        "frontMatter.content.fmHighlight": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Specify if you want to highlight the Front Matter in the Markdown file. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.fmhighlight)",
          "scope": "Content"
        },
        "frontMatter.content.hideFm": {
          "type": "boolean",
          "markdownDescription": "Specify if you want to hide the Front Matter in the Markdown file. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.hidefm)",
          "scope": "Content"
        },
        "frontMatter.content.hideFmMessage": {
          "type": "string",
          "default": "Use the editor panel to make front matter changes",
          "markdownDescription": "Specify the message to display when the Front Matter is hidden. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.hidefmMessage)",
          "scope": "Content"
        },
        "frontMatter.content.pageFolders": {
          "type": "array",
          "default": [],
          "markdownDescription": "This array of folders defines where the extension can retrieve or create new pages. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.pagefolders)",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Name of the folder"
              },
              "path": {
                "type": "string",
                "description": "Path of the folder"
              },
              "excludeSubdir": {
                "type": "boolean",
                "default": false,
                "description": "Exclude sub-directories"
              },
              "previewPath": {
                "type": [
                  "null",
                  "string"
                ],
                "default": null,
                "description": "Defines a custom preview path for the folder."
              }
            },
            "additionalProperties": false,
            "required": [
              "title",
              "path"
            ]
          },
          "scope": "Content"
        },
        "frontMatter.content.placeholders": {
          "type": "array",
          "default": [],
          "markdownDescription": "This array of placeholders defines the placeholders that you can use in your content types and templates for automatically populating your content its front matter. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.placeholders)",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the placeholder, in your content type or template, use it as follows: {{placeholder}}"
              },
              "value": {
                "type": "string",
                "description": "The placeholder its value"
              },
              "script": {
                "type": "string",
                "description": "The script to execute to get the value of the placeholder"
              },
              "command": {
                "$ref": "#scriptCommand"
              }
            },
            "additionalProperties": false,
            "required": [
              "id"
            ]
          },
          "scope": "Content"
        },
        "frontMatter.content.publicFolder": {
          "type": "string",
          "default": "",
          "markdownDescription": "Specify the folder name where all your assets are located. For instance in Hugo this is the `static` folder. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.publicfolder)",
          "scope": "Content"
        },
        "frontMatter.content.snippets": {
          "type": "object",
          "markdownDescription": "Define the snippets you want to use in your content. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.snippets)",
          "additionalProperties": {
            "type": "object",
            "required": [
              "body"
            ],
            "properties": {
              "body": {
                "markdownDescription": "The snippet content.",
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "description": "The snippet description.",
                "type": "string"
              },
              "fields": {
                "$ref": "#contenttypefield"
              },
              "openingTags": {
                "description": "The snippet opening tags.",
                "type": "string",
                "default": "[["
              },
              "closingTags": {
                "description": "The snippet closing tags.",
                "type": "string",
                "default": "]]"
              },
              "isMediaSnippet": {
                "description": "Specify if the snippet is to be used for media files.",
                "type": "boolean",
                "default": false
              }
            },
            "additionalProperties": false
          }
        },
        "frontMatter.content.sorting": {
          "type": "array",
          "default": [],
          "markdownDescription": "Define the sorting options for your dashboard content. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.sorting)",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the sorting option. This will be used for the storing the last used sorting option or the default option."
              },
              "title": {
                "type": "string",
                "description": "Name of the sorting label"
              },
              "name": {
                "type": "string",
                "description": "Name of the metadata field to sort by"
              },
              "order": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order of the sorting"
              },
              "type": {
                "type": "string",
                "default": "string",
                "enum": [
                  "string",
                  "date",
                  "number"
                ],
                "description": "Type of the field value"
              }
            },
            "additionalProperties": false,
            "required": [
              "title",
              "name",
              "order"
            ]
          },
          "scope": "Content"
        },
        "frontMatter.content.supportedFileTypes": {
          "type": "array",
          "default": [
            "md",
            "mdx",
            "markdown"
          ],
          "markdownDescription": "Specify the file types that you want to use in Front Matter. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.supportedfiletypes)",
          "items": {
            "type": "string"
          },
          "scope": "Content"
        },
        "frontMatter.content.wysiwyg": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Specifies if you want to enable/disable the What You See, Is What You Get (WYSIWYG) markdown controls. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.content.wysiwyg)",
          "scope": "Content"
        },
        "frontMatter.custom.scripts": {
          "type": "array",
          "default": [],
          "markdownDescription": "Specify the path to a Node.js script to execute. The current file path will be provided as an argument. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.custom.scripts)",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the script."
              },
              "title": {
                "type": "string",
                "description": "Title you want to give to your script. Will be shown as the title of the button."
              },
              "script": {
                "type": "string",
                "description": "Path to the script to execute"
              },
              "nodeBin": {
                "type": "string",
                "description": "Path to the node executable. This is required when using NVM, so that there is no confusion of which node version to use. (deprecated: use the command property instead)"
              },
              "bulk": {
                "type": "boolean",
                "description": "Run the script for all content files"
              },
              "output": {
                "type": "string",
                "enum": [
                  "editor",
                  "notification"
                ],
                "description": "Define where you want to output your script output. Default is a notification, but you can specify to show it in an editor panel."
              },
              "outputType": {
                "type": "string",
                "description": "The type of output for the editor panel. Can be used to change it to 'markdown' for example"
              },
              "type": {
                "type": "string",
                "default": "content",
                "enum": [
                  "content",
                  "mediaFolder",
                  "mediaFile"
                ],
                "description": "The type for which the script will be used."
              },
              "command": {
                "$id": "#scriptCommand",
                "type": "string",
                "oneOf": [
                  {
                    "enum": [
                      "node",
                      "bash",
                      "powershell",
                      "python",
                      "python3"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The type of script you want to execute.",
                "default": "node"
              },
              "hidden": {
                "type": "boolean",
                "description": "Hide the action from the UI",
                "default": false
              }
            },
            "additionalProperties": false,
            "required": [
              "title",
              "script"
            ]
          },
          "scope": "Custom scripts"
        },
        "frontMatter.dashboard.content.pagination": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Specify if you want to enable/disable pagination for your content. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.dashboard.content.pagination)",
          "scope": "Dashboard"
        },
        "frontMatter.dashboard.content.cardTags": {
          "type": "string",
          "default": "tags",
          "markdownDescription": "Specify the name of the metadata field that will be used to show the tags on the content card. When empty or null, it will hide the tags from the card. [Check in the docs](https://frontmatter.codes/docs/settings#frontMatter.dashboard.content.cardTags)",
          "scope": "Dashboard"
        },
        "frontMatter.dashboard.mediaSnippet": {
          "type": "array",
          "default": [],
          "markdownDescription": "Specify the a snippet for your custom media insert markup. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.dashboard.mediasnippet)",
          "deprecationMessage": "This setting is deprecated and will be removed in the next major version. Please define your media snippet in the `frontMatter.content.snippet` setting.",
          "items": {
            "type": "string",
            "description": "Use the `{mediaUrl}`, `{caption}`, `{alt}`, `{filename}`, `{mediaHeight}`, and `{mediaWidth}` placeholders in your snippet to automatically insert the media information."
          },
          "scope": "dashboard"
        },
        "frontMatter.dashboard.openOnStart": {
          "type": [
            "boolean",
            "null"
          ],
          "default": null,
          "markdownDescription": "Specify if you want to open the dashboard when you start VS Code.  [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.dashboard.openonstart)",
          "scope": "Dashboard"
        },
        "frontMatter.data.files": {
          "type": "array",
          "default": [],
          "markdownDescription": "Specify the data files you want to use for your website. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.data.files)",
          "items": {
            "type": "object",
            "default": {},
            "properties": {
              "id": {
                "type": "string",
                "description": "Your unique ID you want to use for your data file."
              },
              "title": {
                "type": "string",
                "description": "Title you want to give to your data file."
              },
              "labelField": {
                "type": "string",
                "description": "The field you want to use as label for your data entries."
              },
              "file": {
                "type": "string",
                "description": "Path to the file to load. Only JSON or YAML files are supported.",
                "default": "[[workspace]]/"
              },
              "fileType": {
                "type": "string",
                "default": "json",
                "enum": [
                  "json",
                  "yaml"
                ],
                "description": "Defines how you want to parse the file. JSON is the default."
              },
              "schema": {
                "$id": "#dataFileSchema",
                "type": "object",
                "default": {},
                "description": "The JSON schema for your data which will be used to render the data form.",
                "additionalProperties": true,
                "required": [
                  "type",
                  "properties"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the form."
                  },
                  "type": {
                    "type": "string",
                    "description": "Defines the type of the form. Default is 'object'.",
                    "default": "object"
                  },
                  "required": {
                    "type": "array",
                    "description": "Defines the required fields for the form.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "properties": {
                    "type": "object",
                    "description": "Defines the fields of the form.",
                    "additionalProperties": true
                  }
                }
              },
              "type": {
                "type": "string",
                "default": "content",
                "description": "If you are using data types, you can specify your type ID."
              }
            },
            "additionalProperties": false,
            "required": [
              "id",
              "title",
              "file"
            ],
            "anyOf": [
              {
                "required": [
                  "schema"
                ]
              },
              {
                "required": [
                  "type"
                ]
              }
            ]
          },
          "scope": "Data"
        },
        "frontMatter.data.folders": {
          "type": "array",
          "default": [],
          "markdownDescription": "Specify the data files you want to use for your website. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.data.files)",
          "items": {
            "type": "object",
            "default": {},
            "properties": {
              "id": {
                "type": "string",
                "description": "Your unique ID you want to use for your data folder."
              },
              "labelField": {
                "type": "string",
                "description": "The field you want to use as label for your data entries."
              },
              "path": {
                "type": "string",
                "description": "Path to the folder to load files.",
                "default": "[[workspace]]/"
              },
              "schema": {
                "$ref": "#dataFileSchema"
              },
              "type": {
                "type": "string",
                "default": "content",
                "description": "If you are using data types, you can specify your type ID."
              }
            },
            "additionalProperties": false,
            "required": [
              "id",
              "path"
            ],
            "anyOf": [
              {
                "required": [
                  "schema"
                ]
              },
              {
                "required": [
                  "type"
                ]
              }
            ]
          },
          "scope": "Data"
        },
        "frontMatter.data.types": {
          "type": "array",
          "default": [],
          "markdownDescription": "Specify the data types. These types can be used in for your data files. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.data.types)",
          "items": {
            "type": "object",
            "default": {},
            "properties": {
              "id": {
                "type": "string",
                "description": "Your unique ID you want to use for your data type."
              },
              "schema": {
                "$ref": "#dataFileSchema"
              }
            },
            "required": [
              "id",
              "schema"
            ]
          },
          "scope": "Data"
        },
        "frontMatter.file.preserveCasing": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Specify if you want to preserve the casing of your file names from the title. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.file.preservecasing)",
          "scope": "File"
        },
        "frontMatter.framework.id": {
          "type": "string",
          "default": "",
          "markdownDescription": "Specify the ID of your static site generator or framework you are using for your website. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.framework.id)"
        },
        "frontMatter.framework.startCommand": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "markdownDescription": "Specify the command you want to use to start your static site generator or framework. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.framework.startcommand)"
        },
        "frontMatter.git.enabled": {
          "type": "boolean",
          "markdownDescription": "Specify if you want to use the Git actions for your website. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.git.enabled)",
          "default": false
        },
        "frontMatter.git.commitMessage": {
          "type": "string",
          "markdownDescription": "Specify the commit message you want to use for the sync. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.git.commitmessage)",
          "default": "Synced by Front Matter"
        },
        "frontMatter.global.activeMode": {
          "type": [
            "string",
            "null"
          ],
          "default": "",
          "markdownDescription": "Specify the activated mode of Front Matter. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.global.activemode)",
          "scope": "Global"
        },
        "frontMatter.global.modes": {
          "type": "array",
          "default": [],
          "markdownDescription": "Specify the modes you want to use for Front Matter. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.global.modes)",
          "items": {
            "type": "object",
            "default": {},
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of your mode."
              },
              "features": {
                "type": "array",
                "default": [],
                "description": "The features you want to use for your mode.",
                "items": {
                  "type": "string",
                  "enum": [
                    "panel.globalSettings",
                    "panel.seo",
                    "panel.actions",
                    "panel.contentType",
                    "panel.metadata",
                    "panel.recentlyModified",
                    "panel.otherActions",
                    "dashboard.snippets.view",
                    "dashboard.snippets.manage",
                    "dashboard.data.view",
                    "dashboard.taxonomy.view"
                  ]
                }
              }
            },
            "required": [
              "id",
              "features"
            ]
          },
          "scope": "Global"
        },
        "frontMatter.global.notifications": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "info",
              "warning",
              "error"
            ]
          },
          "default": [
            "info",
            "warning",
            "error"
          ],
          "markdownDescription": "Specifies the notifications you want to see. By default, all notifications types will be shown. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.global.notifications)",
          "scope": "Templates"
        },
        "frontMatter.global.disabledNotificaitons": {
          "type": "array",
          "default": [],
          "markdownDescription": "This is an array with the notifications types that can be disabled for Front Matter CMS. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.global.disablednotifications)",
          "enum": [
            "requiredFieldValidation"
          ]
        },
        "frontMatter.media.defaultSorting": {
          "type": "string",
          "default": "",
          "enum": [
            "LastModifiedAsc",
            "LastModifiedDesc",
            "FileNameAsc",
            "FileNameDesc"
          ],
          "markdownDescription": "Specify the default sorting option for the media dashboard. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.media.defaultsorting)",
          "scope": "Content"
        },
        "frontMatter.media.supportedMimeTypes": {
          "type": "array",
          "default": [
            "image/*",
            "video/*",
            "audio/*"
          ],
          "markdownDescription": "Specify the mime types to support for the media files. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.media.supportedMimeTypes)",
          "items": {
            "type": "string"
          },
          "scope": "Media"
        },
        "frontMatter.panel.freeform": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Specifies if you want to allow yourself from entering unknown tags/categories in the tag picker (when enabled, you will have the option to store them afterwards). Default: true. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.panel.freeform)",
          "scope": "Panel"
        },
        "frontMatter.preview.host": {
          "type": "string",
          "default": "",
          "markdownDescription": "Specify the host URL (example: http://localhost:1313) to be used when opening the preview. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.preview.host)",
          "scope": "Site preview"
        },
        "frontMatter.preview.pathName": {
          "type": "string",
          "default": "",
          "markdownDescription": "Specify the path you want to add after the host and before your slug. This can be used for instance to include the year/month like: `yyyy/MM`. The date will be generated based on the article its date field value. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.preview.pathname)",
          "scope": "Site preview"
        },
        "frontMatter.site.baseURL": {
          "type": "string",
          "default": "",
          "markdownDescription": "Specify the base URL of your site, this will be used for SEO checks. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.site.baseurl)",
          "scope": "Site"
        },
        "frontMatter.taxonomy.alignFilename": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Align the filename with the new slug when it gets generated. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.alignfilename)",
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.categories": {
          "type": "array",
          "markdownDescription": "Specifies the categories which can be used in the Front Matter. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.categories)",
          "items": {
            "type": "string"
          },
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.commaSeparatedFields": {
          "type": "array",
          "markdownDescription": "Specify the fields names that Front Matter should treat as a comma-separated array. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.commaSeparatedFields)",
          "items": {
            "type": "string",
            "description": "Name of the fields you want to use as comma-separated arrays."
          },
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.contentTypes": {
          "type": [
            "array",
            "null"
          ],
          "markdownDescription": "Specify the type of contents you want to use for your articles/pages/etc. Make sure the `type` is correctly set in your front matter. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.contentTypes)",
          "items": {
            "type": "object",
            "description": "Define the content types you want to use in Front Matter.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Define the type of field"
              },
              "fileType": {
                "type": "string",
                "default": "",
                "enum": [
                  "md",
                  "mdx"
                ],
                "description": "Specifies the type of content you want to create."
              },
              "fields": {
                "$id": "#contenttypefield",
                "type": "array",
                "description": "Define the fields of the content type",
                "items": {
                  "type": "object",
                  "description": "Define the content types you want to use in Front Matter.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "number",
                        "datetime",
                        "boolean",
                        "image",
                        "file",
                        "choice",
                        "taxonomy",
                        "tags",
                        "categories",
                        "draft",
                        "fields",
                        "json",
                        "block",
                        "list",
                        "dataFile",
                        "slug",
                        "divider",
                        "heading"
                      ],
                      "description": "Define the type of field"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the field to use"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title to show in the UI"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description to show in the UI"
                    },
                    "default": {
                      "type": [
                        "string",
                        "number",
                        "boolean",
                        "array",
                        "object",
                        "null"
                      ],
                      "description": "Default value"
                    },
                    "choices": {
                      "type": "array",
                      "description": "Define your choices",
                      "items": {
                        "type": [
                          "object",
                          "string"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "description": "The choice ID"
                          },
                          "title": {
                            "type": "string",
                            "description": "The choice title"
                          }
                        }
                      }
                    },
                    "single": {
                      "type": "boolean",
                      "default": false,
                      "description": "Is a single line field"
                    },
                    "wysiwyg": {
                      "type": "boolean",
                      "default": false,
                      "description": "Is a WYSIWYG field (HTML output)"
                    },
                    "multiple": {
                      "type": "boolean",
                      "default": false,
                      "description": "Do you allow to select multiple values?"
                    },
                    "isPreviewImage": {
                      "type": "boolean",
                      "default": false,
                      "description": "Specify if the image field can be used as preview. Be aware, you can only have one preview image per content type."
                    },
                    "hidden": {
                      "type": "boolean",
                      "default": false,
                      "description": "Do you want to hide the field from the metadata section?"
                    },
                    "taxonomyId": {
                      "type": "string",
                      "default": "",
                      "description": "The ID of your taxonomy field. It cannot contain the \"tags\" or \"categories\" value.",
                      "not": {
                        "anyOf": [
                          {
                            "const": ""
                          },
                          {
                            "const": "tags"
                          },
                          {
                            "const": "categories"
                          }
                        ]
                      }
                    },
                    "fileExtensions": {
                      "type": "array",
                      "description": "Specify the file extensions to allow for the file picker",
                      "items": {
                        "type": "string"
                      }
                    },
                    "fields": {
                      "$ref": "#contenttypefield"
                    },
                    "fieldGroup": {
                      "type": [
                        "string",
                        "array"
                      ],
                      "default": [],
                      "description": "The ID(s) of your field group(s) defined in the `frontMatter.taxonomy.fieldGroups` setting",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dataType": {
                      "type": [
                        "string",
                        "array"
                      ],
                      "default": [],
                      "description": "The ID(s) of your data type(s) defined in the `frontMatter.data.types` setting",
                      "items": {
                        "type": "string"
                      }
                    },
                    "taxonomyLimit": {
                      "type": "number",
                      "default": 0,
                      "description": "Limit the number of taxonomies to select. Set to 0 to allow unlimited."
                    },
                    "isPublishDate": {
                      "type": "boolean",
                      "default": false,
                      "description": "Specify if the field is the publish date field"
                    },
                    "isModifiedDate": {
                      "type": "boolean",
                      "default": false,
                      "description": "Specify if the field is the modified date field"
                    },
                    "dataFileId": {
                      "type": "string",
                      "default": "",
                      "description": "Specify the ID of the data file to use for this field"
                    },
                    "dataFileKey": {
                      "type": "string",
                      "default": "",
                      "description": "Specify the key of the data file to use for this field"
                    },
                    "dataFileValue": {
                      "type": "string",
                      "default": "",
                      "description": "Specify the property name that will be used to show the value for the field"
                    },
                    "editable": {
                      "type": "boolean",
                      "default": true,
                      "description": "Specify if the field is editable"
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "description": "Specify if the field is required"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "type",
                    "name"
                  ],
                  "allOf": [
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "divider"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "type"
                        ]
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "dataFile"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "dataFileId",
                          "dataFileKey"
                        ]
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "file"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "fileExtensions"
                        ]
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "taxonomy"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "taxonomyId"
                        ]
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "choice"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "choices"
                        ]
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "fields"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "fields"
                        ]
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "block"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "fieldGroup"
                        ]
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "json"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "dataType"
                        ]
                      }
                    }
                  ]
                }
              },
              "pageBundle": {
                "type": "boolean",
                "default": false,
                "description": "Specify if you want to create a folder when creating new content."
              },
              "previewPath": {
                "type": [
                  "null",
                  "string"
                ],
                "default": null,
                "description": "Defines a custom preview path for the content type."
              },
              "template": {
                "type": "string",
                "default": "",
                "description": "An optional template that can be used for creating new content."
              },
              "postScript": {
                "type": "string",
                "default": "",
                "description": "An optional post script that can be used after new content creation."
              }
            },
            "additionalProperties": false,
            "required": [
              "name",
              "fields"
            ]
          },
          "default": [
            {
              "name": "default",
              "pageBundle": false,
              "fields": [
                {
                  "title": "Title",
                  "name": "title",
                  "type": "string"
                },
                {
                  "title": "Description",
                  "name": "description",
                  "type": "string"
                },
                {
                  "title": "Publishing date",
                  "name": "date",
                  "type": "datetime",
                  "default": "{{now}}",
                  "isPublishDate": true
                },
                {
                  "title": "Content preview",
                  "name": "preview",
                  "type": "image"
                },
                {
                  "title": "Is in draft",
                  "name": "draft",
                  "type": "boolean"
                },
                {
                  "title": "Tags",
                  "name": "tags",
                  "type": "tags"
                },
                {
                  "title": "Categories",
                  "name": "categories",
                  "type": "categories"
                }
              ]
            }
          ],
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.customTaxonomy": {
          "type": "array",
          "markdownDescription": "Specify the custom taxonomy field data. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.tags)",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID for your taxonomy field. It cannot contain the \"tags\" or \"categories\" value.",
                "not": {
                  "anyOf": [
                    {
                      "const": ""
                    },
                    {
                      "const": "tags"
                    },
                    {
                      "const": "categories"
                    }
                  ]
                }
              },
              "options": {
                "type": "array",
                "description": "Options from which you can pick.",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false,
            "required": [
              "id",
              "options"
            ]
          },
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.dateField": {
          "type": "string",
          "default": "date",
          "markdownDescription": "This setting is used to define the publishing date field of your articles. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.datefield)",
          "deprecationMessage": "This setting is deprecated and will be removed in the next major version. Please use the new `isPublishDate` settings instead in your content types date fields."
        },
        "frontMatter.taxonomy.dateFormat": {
          "type": "string",
          "markdownDescription": "Specify the date format for your articles. Check [date-fns formating](https://date-fns.org/v2.0.1/docs/format) for more information. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.dateformat)",
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.fieldGroups": {
          "type": "array",
          "markdownDescription": "Define the field groups you want to use for your block fields. [Check in the docs](https://frontmatter.codes/docs/settings#frontMatter.taxonomy.fieldgroups)",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The name of the field group"
              },
              "labelField": {
                "type": "string",
                "description": "The name of the field to be used as display value"
              },
              "fields": {
                "$ref": "#contenttypefield"
              }
            },
            "additionalProperties": false,
            "required": [
              "id",
              "fields"
            ]
          }
        },
        "frontMatter.taxonomy.frontMatterType": {
          "type": "string",
          "default": "YAML",
          "enum": [
            "YAML",
            "TOML",
            "JSON"
          ],
          "markdownDescription": "Specify the type of Front Matter to use. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.frontmattertype)",
          "enumDescriptions": [
            "Specifies you want to use YAML markup for the front matter (default)",
            "Specifies you want to use TOML markup for the front matter",
            "Specifies you want to use JSON markup for the front matter"
          ],
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.indentArrays": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Specify if arrays in front matter are indented. Default: true. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.indentarrays)",
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.modifiedField": {
          "type": "string",
          "default": "lastmod",
          "markdownDescription": "This setting is used to define the modified date field of your articles. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.modifiedfield)",
          "deprecationMessage": "This setting is deprecated and will be removed in the next major version. Please use the new `isModifiedDate` settings instead in your content types date fields."
        },
        "frontMatter.taxonomy.noPropertyValueQuotes": {
          "type": "array",
          "default": [],
          "markdownDescription": "Specify the properties from which quotes need to be removed. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.nopropertyvaluequotes)",
          "items": {
            "type": "string",
            "description": "Name of the properties you want to remove quotes from."
          },
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.seoContentLengh": {
          "type": "number",
          "default": 1760,
          "markdownDescription": "Specifies the optimal minimum length for your articles. Between 1,760 words â€“ 2,400 is the absolute ideal article length for SEO in 2021. (set to `-1` to turn it off). [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.seocontentlengh)",
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.seoDescriptionField": {
          "type": "string",
          "default": "description",
          "markdownDescription": "Specifies the name of the SEO description field for your page. Default is 'description'. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.seodescriptionfield)",
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.seoDescriptionLength": {
          "type": "number",
          "default": 160,
          "markdownDescription": "Specifies the optimal description length for SEO (set to `-1` to turn it off). [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.seodescriptionlength)",
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.seoSlugLength": {
          "type": "number",
          "default": 75,
          "markdownDescription": "Specifies the optimal slug length for SEO (set to `-1` to turn it off). [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.seoSlugLength)",
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.seoTitleLength": {
          "type": "number",
          "default": 60,
          "markdownDescription": "Specifies the optimal title length for SEO (set to `-1` to turn it off). [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.seotitlelength)",
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.slugPrefix": {
          "type": "string",
          "markdownDescription": "Specify a prefix for the slug. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.slugprefix)",
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.slugSuffix": {
          "type": "string",
          "markdownDescription": "Specify a suffix for the slug. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.slugsuffix)",
          "scope": "Taxonomy"
        },
        "frontMatter.taxonomy.tags": {
          "type": "array",
          "markdownDescription": "Specifies the tags which can be used in the Front Matter. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.taxonomy.tags)",
          "items": {
            "type": "string"
          },
          "scope": "Taxonomy"
        },
        "frontMatter.telemetry.disable": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Specify if you want to disable the telemetry. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.telemetry.disable)"
        },
        "frontMatter.templates.enabled": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Specify if you want to use templates. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.templates.enabled)",
          "scope": "Templates"
        },
        "frontMatter.templates.folder": {
          "type": "string",
          "default": ".frontmatter/templates",
          "markdownDescription": "Specify the folder to use for your article templates. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.templates.folder)",
          "scope": "Templates"
        },
        "frontMatter.templates.prefix": {
          "type": "string",
          "default": "yyyy-MM-dd",
          "markdownDescription": "Specify the prefix you want to add for your new article filenames. [Check in the docs](https://frontmatter.codes/docs/settings#frontmatter.templates.prefix)",
          "scope": "Templates"
        }
      }
    },
    "commands": [
      {
        "command": "frontMatter.config.reload",
        "title": "Reload config",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.authenticate",
        "title": "Authenticate",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.contenttype.generate",
        "title": "Generate content type from current file",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.contenttype.addMissingFields",
        "title": "Add missing fields from front matter to content type",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.contenttype.setContentType",
        "title": "Set the content type to use for the current file",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.markup.blockquote",
        "title": "Blockquote",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/blockquote-light.svg",
          "dark": "assets/icons/blockquote-dark.svg"
        }
      },
      {
        "command": "frontMatter.markup.bold",
        "title": "Bold",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/bold-light.svg",
          "dark": "assets/icons/bold-dark.svg"
        }
      },
      {
        "command": "frontMatter.dashboard.close",
        "title": "Close dashboard",
        "category": "Front Matter",
        "icon": {
          "dark": "/assets/icons/frontmatter-small-teal.svg",
          "light": "/assets/icons/frontmatter-small-teal.svg"
        }
      },
      {
        "command": "frontMatter.markup.code",
        "title": "Code",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/code-light.svg",
          "dark": "assets/icons/code-dark.svg"
        }
      },
      {
        "command": "frontMatter.markup.codeblock",
        "title": "Codeblock",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/codeblock-light.svg",
          "dark": "assets/icons/codeblock-dark.svg"
        }
      },
      {
        "command": "frontMatter.markup.hyperlink",
        "title": "Hyperlink",
        "category": "Front Matter",
        "icon": "$(link)"
      },
      {
        "command": "frontMatter.collapseSections",
        "title": "Collapse sections",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/close-light.svg",
          "dark": "assets/icons/close-dark.svg"
        }
      },
      {
        "command": "frontMatter.initTemplate",
        "title": "Initialize the template folder",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.createTemplate",
        "title": "Create template from current file",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.createCategory",
        "title": "Create category",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.createContent",
        "title": "Create new content from defined content type or template",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.createTag",
        "title": "Create tag",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.diagnostics",
        "title": "Diagnostic logging",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.exportTaxonomy",
        "title": "Export all tags & categories to your settings",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.createFromTemplate",
        "title": "Front Matter: New article from template"
      },
      {
        "command": "frontMatter.registerFolder",
        "title": "Front Matter: Register folder"
      },
      {
        "command": "frontMatter.unregisterFolder",
        "title": "Front Matter: Unregister folder"
      },
      {
        "command": "frontMatter.generateSlug",
        "title": "Generate slug based on content title",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.markup.heading",
        "title": "Heading",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/heading-light.svg",
          "dark": "assets/icons/heading-dark.svg"
        }
      },
      {
        "command": "frontMatter.init",
        "title": "Initialize project",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.insertCategories",
        "title": "Insert categories",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.insertMedia",
        "title": "Insert media into your content",
        "category": "Front Matter",
        "icon": {
          "dark": "/assets/icons/media-dark.svg",
          "light": "/assets/icons/media-light.svg"
        }
      },
      {
        "command": "frontMatter.insertSnippet",
        "title": "Insert snippet into your content",
        "category": "Front Matter",
        "icon": {
          "dark": "/assets/icons/scissors-dark.svg",
          "light": "/assets/icons/scissors-light.svg"
        }
      },
      {
        "command": "frontMatter.insertTags",
        "title": "Insert tags",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.markup.italic",
        "title": "Italic",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/italic-light.svg",
          "dark": "assets/icons/italic-dark.svg"
        }
      },
      {
        "command": "frontMatter.dashboard",
        "title": "Open dashboard",
        "category": "Front Matter",
        "icon": {
          "dark": "/assets/icons/frontmatter-small-dark.svg",
          "light": "/assets/icons/frontmatter-small-light.svg"
        }
      },
      {
        "command": "frontMatter.dashboard.data",
        "title": "Open data dashboard",
        "category": "Front Matter",
        "icon": {
          "dark": "/assets/icons/frontmatter-small-dark.svg",
          "light": "/assets/icons/frontmatter-small-light.svg"
        }
      },
      {
        "command": "frontMatter.dashboard.media",
        "title": "Open media dashboard",
        "category": "Front Matter",
        "icon": {
          "dark": "/assets/icons/frontmatter-small-dark.svg",
          "light": "/assets/icons/frontmatter-small-light.svg"
        }
      },
      {
        "command": "frontMatter.dashboard.snippets",
        "title": "Open snippets dashboard",
        "category": "Front Matter",
        "icon": {
          "dark": "/assets/icons/frontmatter-small-dark.svg",
          "light": "/assets/icons/frontmatter-small-light.svg"
        }
      },
      {
        "command": "frontMatter.dashboard.taxonomy",
        "title": "Open taxonomies dashboard",
        "category": "Front Matter",
        "icon": {
          "dark": "/assets/icons/frontmatter-small-dark.svg",
          "light": "/assets/icons/frontmatter-small-light.svg"
        }
      },
      {
        "command": "frontMatter.markup.orderedlist",
        "title": "Ordered list",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/ordered-list-light.svg",
          "dark": "assets/icons/ordered-list-dark.svg"
        }
      },
      {
        "command": "frontMatter.markup.options",
        "title": "Other markup options",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/options-light.svg",
          "dark": "assets/icons/options-dark.svg"
        }
      },
      {
        "command": "frontMatter.preview",
        "title": "Preview content",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.promoteSettings",
        "title": "Promote settings from local to team level",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.remap",
        "title": "Remap or remove tag/category in all articles",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.setLastModifiedDate",
        "title": "Set lastmod date",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.markup.strikethrough",
        "title": "Strikethrough",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/strikethrough-light.svg",
          "dark": "assets/icons/strikethrough-dark.svg"
        }
      },
      {
        "command": "frontMatter.mode.switch",
        "title": "Switch mode",
        "category": "Front Matter",
        "icon": "$(preview)"
      },
      {
        "command": "frontMatter.markup.tasklist",
        "title": "Task list",
        "category": "Front Matter"
      },
      {
        "command": "frontMatter.markup.unorderedlist",
        "title": "Unordered list",
        "category": "Front Matter",
        "icon": {
          "light": "assets/icons/unordered-list-light.svg",
          "dark": "assets/icons/unordered-list-dark.svg"
        }
      },
      {
        "command": "frontMatter.git.sync",
        "title": "Sync",
        "category": "Front Matter"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "frontMatter.markup.heading",
          "group": "navigation@-133",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.markup.bold",
          "group": "navigation@-132",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.markup.italic",
          "group": "navigation@-131",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.markup.hyperlink",
          "group": "navigation@-130",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.insertSnippet",
          "group": "navigation@-129",
          "when": "frontMatter:file:isValid == true && frontMatter:dashboard:snippets:enabled"
        },
        {
          "command": "frontMatter.insertMedia",
          "group": "navigation@-128",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.markup.options",
          "group": "navigation@-126",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.markup.orderedlist",
          "group": "1_markup@1",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.markup.unorderedlist",
          "group": "1_markup@2",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.markup.tasklist",
          "group": "1_markup@3",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.markup.code",
          "group": "1_markup@4",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.markup.codeblock",
          "group": "1_markup@5",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.markup.blockquote",
          "group": "1_markup@6",
          "when": "frontMatter:file:isValid == true && frontMatter:markdown:wysiwyg"
        },
        {
          "command": "frontMatter.dashboard",
          "group": "navigation@-98",
          "when": "frontMatter:enabled == true && frontMatter:dashboard:open == false"
        },
        {
          "command": "frontMatter.dashboard.close",
          "group": "navigation@-98",
          "when": "frontMatter:enabled == true && frontMatter:dashboard:open == true"
        }
      ],
      "explorer/context": [
        {
          "command": "frontMatter.createFromTemplate",
          "when": "explorerResourceIsFolder",
          "group": "Front Matter@1"
        },
        {
          "command": "frontMatter.registerFolder",
          "when": "explorerResourceIsFolder",
          "group": "Front Matter@2"
        },
        {
          "command": "frontMatter.unregisterFolder",
          "when": "explorerResourceIsFolder",
          "group": "Front Matter@3"
        }
      ],
      "commandPalette": [
        {
          "command": "frontMatter.init",
          "when": "frontMatterCanInit"
        },
        {
          "command": "frontMatter.createTemplate",
          "when": "!frontMatterCanInit"
        },
        {
          "command": "frontMatter.preview",
          "when": "frontMatterCanOpenPreview"
        },
        {
          "command": "frontMatter.dashboard.data",
          "when": "frontMatter:dashboard:data:enabled"
        },
        {
          "command": "frontMatter.dashboard.snippets",
          "when": "frontMatter:dashboard:snippets:enabled"
        },
        {
          "command": "frontMatter.git.sync",
          "when": "frontMatter:git:enabled"
        },
        {
          "command": "frontMatter.collapseSections",
          "when": "false"
        },
        {
          "command": "frontMatter.registerFolder",
          "when": "false"
        },
        {
          "command": "frontMatter.unregisterFolder",
          "when": "false"
        },
        {
          "command": "frontMatter.createFromTemplate",
          "when": "false"
        },
        {
          "command": "frontMatter.dashboard.close",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.bold",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.italic",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.strikethrough",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.code",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.codeblock",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.blockquote",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.heading",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.unorderedlist",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.orderedlist",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.tasklist",
          "when": "false"
        },
        {
          "command": "frontMatter.markup.options",
          "when": "false"
        },
        {
          "command": "frontMatter.insertSnippet",
          "when": "frontMatter:file:isValid == true && frontMatter:dashboard:snippets:enabled"
        },
        {
          "command": "frontMatter.insertMedia",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.createCategory",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.createTag",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.insertCategories",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.insertTags",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.createTemplate",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.preview",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.setLastModifiedDate",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.generateSlug",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.contenttype.generate",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.contenttype.addMissingFields",
          "when": "frontMatter:file:isValid == true"
        },
        {
          "command": "frontMatter.contenttype.setContentType",
          "when": "frontMatter:file:isValid == true"
        }
      ],
      "view/title": [
        {
          "command": "frontMatter.collapseSections",
          "group": "navigation@0",
          "when": "view == frontMatter.explorer"
        },
        {
          "command": "frontMatter.mode.switch",
          "group": "navigation@1",
          "when": "view == frontMatter.explorer && frontMatter:has:modes == true"
        },
        {
          "command": "frontMatter.dashboard",
          "group": "navigation@2",
          "when": "view == frontMatter.explorer || view == explorer"
        }
      ]
    },
    "grammars": [
      {
        "path": "./syntaxes/hugo.tmLanguage.json",
        "scopeName": "frontmatter.markdown.hugo",
        "injectTo": [
          "text.html.markdown"
        ]
      }
    ],
    "walkthroughs": [
      {
        "id": "frontmatter.welcome",
        "title": "Get started with Front Matter",
        "description": "Discover the features of Front Matter and learn how to use the CMS for your SSG or static site.",
        "steps": [
          {
            "id": "frontmatter.welcome.init",
            "title": "Get started",
            "description": "Initial steps to get started.\n[Open dashboard](command:frontMatter.dashboard)",
            "media": {
              "markdown": "assets/walkthrough/get-started.md"
            },
            "completionEvents": [
              "onContext:frontMatterInitialized"
            ]
          },
          {
            "id": "frontmatter.welcome.documentation",
            "title": "Documentation",
            "description": "Check out the documentation for Front Matter.\n[View our documentation](https://frontmatter.codes/docs)",
            "media": {
              "markdown": "assets/walkthrough/documentation.md"
            },
            "completionEvents": [
              "onLink:https://frontmatter.codes/docs"
            ]
          },
          {
            "id": "frontmatter.welcome.supporter",
            "title": "Support the project",
            "description": "Become a supporter.\n[Support the project](https://github.com/sponsors/estruyf)",
            "media": {
              "markdown": "assets/walkthrough/support-the-project.md"
            },
            "completionEvents": [
              "onLink:https://github.com/sponsors/estruyf"
            ]
          }
        ]
      }
    ]
  },
  "scripts": {
    "dev:ext": "npm run clean && npm-run-all --parallel watch:*",
    "vscode:prepublish": "npm run clean && npm-run-all --parallel prod:*",
    "build:ext": "npm run clean && npm-run-all --parallel dev:build:*",
    "watch:ext": "webpack --mode development --watch --config ./webpack/extension.config.js",
    "watch:dashboard": "webpack serve --mode development --config ./webpack/dashboard.config.js",
    "watch:panel": "webpack serve --mode development --config ./webpack/panel.config.js",
    "dev:build:ext": "webpack --mode development --config ./webpack/extension.config.js",
    "dev:build:dashboard": "webpack --mode development --config ./webpack/dashboard.config.js",
    "dev:build:panel": "webpack --mode development --config ./webpack/panel.config.js",
    "prod:ext": "webpack --mode production --config ./webpack/extension.config.js",
    "prod:dashboard": "webpack --mode production --config ./webpack/dashboard.config.js",
    "prod:panel": "webpack --mode production --config ./webpack/panel.config.js",
    "test-compile": "tsc -p ./",
    "clean": "rimraf dist",
    "start:site": "cd ./docs && npm run dev",
    "clean:test": "rm ./e2e/sample/frontmatter.json || exit 0 && rm -rf ./e2e/sample/.frontmatter || exit 0",
    "test": "tsc -p tsconfig.e2e.json && npm run clean:test && node ./e2e/out/runTests.js"
  },
  "devDependencies": {
    "@actions/core": "^1.8.2",
    "@bendera/vscode-webview-elements": "0.6.2",
    "@estruyf/vscode": "0.0.3",
    "@headlessui/react": "1.5.0",
    "@heroicons/react": "1.0.4",
    "@iarna/toml": "2.2.3",
    "@octokit/rest": "^18.12.0",
    "@popperjs/core": "^2.11.6",
    "@sentry/react": "^6.13.3",
    "@sentry/tracing": "^6.13.3",
    "@tailwindcss/forms": "^0.3.3",
    "@types/chai": "^4.3.1",
    "@types/glob": "7.1.3",
    "@types/invariant": "^2.2.35",
    "@types/js-yaml": "3.12.1",
    "@types/lodash.omit": "^4.5.6",
    "@types/lodash.uniqby": "4.7.6",
    "@types/lodash.xor": "^4.5.6",
    "@types/mime-types": "^2.1.1",
    "@types/mocha": "^5.2.7",
    "@types/mustache": "^4.1.2",
    "@types/node": "10.17.48",
    "@types/node-fetch": "^2.5.12",
    "@types/react": "17.0.0",
    "@types/react-datepicker": "^4.1.7",
    "@types/react-dom": "17.0.0",
    "@types/vscode": "^1.63.0",
    "@vscode/codicons": "0.0.20",
    "@vscode/extension-telemetry": "^0.4.7",
    "@vscode/webview-ui-toolkit": "^0.9.1",
    "@webpack-cli/serve": "^1.6.0",
    "ajv": "^8.8.2",
    "array-move": "^4.0.0",
    "autoprefixer": "^10.3.2",
    "chai": "^4.3.6",
    "css-loader": "5.2.7",
    "date-fns": "2.23.0",
    "downshift": "6.0.6",
    "fuse.js": "6.5.3",
    "glob": "7.1.6",
    "gray-matter": "4.0.3",
    "html-loader": "1.3.2",
    "html-webpack-plugin": "4.5.0",
    "image-size": "^1.0.0",
    "invariant": "^2.2.4",
    "jsonc-parser": "^3.2.0",
    "lodash-es": "^4.17.21",
    "lodash.omit": "^4.5.0",
    "lodash.uniqby": "4.7.0",
    "lodash.xor": "^4.5.0",
    "mdast-util-from-markdown": "1.0.0",
    "mime-types": "^2.1.35",
    "mocha": "^10.0.0",
    "mustache": "^4.2.0",
    "node-json-db": "^1.3.0",
    "npm-run-all": "^4.1.5",
    "path-browserify": "^1.0.1",
    "postcss": "^8.3.6",
    "postcss-loader": "4.3.0",
    "postcss-nested": "^5.0.6",
    "react": "17.0.1",
    "react-datepicker": "4.2.1",
    "react-dom": "17.0.1",
    "react-dropzone": "^11.3.4",
    "react-quill": "^2.0.0-beta.4",
    "react-router-dom": "^6.3.0",
    "react-sortable-hoc": "^2.0.0",
    "react-toastify": "^8.1.0",
    "recoil": "^0.4.1",
    "rimraf": "^3.0.2",
    "semver": "^7.3.7",
    "simple-git": "^3.15.0",
    "style-loader": "2.0.0",
    "tailwindcss": "^2.2.7",
    "tailwindcss-nested-groups": "^1.2.4",
    "ts-loader": "8.0.3",
    "tslint": "6.1.3",
    "typescript": "^4.5.4",
    "uniforms": "^3.7.0",
    "uniforms-antd": "^3.7.0",
    "uniforms-bridge-json-schema": "^3.7.0",
    "uniforms-unstyled": "^3.7.0",
    "url-join-ts": "^1.0.5",
    "vscode-extension-tester": "^4.2.5",
    "wc-react": "github:estruyf/wc-react",
    "webpack": "^5.65.0",
    "webpack-bundle-analyzer": "^4.5.0",
    "webpack-cli": "^4.9.1",
    "webpack-dev-server": "^4.6.0",
    "yaml": "^1.10.2",
    "yawn-yaml": "^1.5.0"
  },
  "dependencies": {
    "node-fetch": "^2.6.7"
  }
}
